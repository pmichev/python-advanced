---------------------------------- Tuples and Sets - Exercise ----------------------------------

https://judge.softuni.bg/Contests/Compete/Index/1833#0




                # 01. Unique Usernames

n = int(input())
users = set()
for i in range(n):
    data = input()
    users.add(data)

for ele in users:
    print(ele)




                02. Sets of Elements

numbers = [int(ele) for ele in input().split()]
n = numbers[0]
m = numbers[1]
set1 = set()
set2 = set()

for i in range(n):
    data = int(input())
    set1.add(data)

for i in range(m):
    data = int(input())
    set2.add(data)

intersection = set.intersection(set1,set2)
for ele in intersection:
    print(ele)




                # 03. Periodic Table

n = int(input())
elements = set()

for i in range(n):
    data = input().split()
    for ele in data:
        elements.add(ele)

for ele in elements:
    print(ele)



                # 04. Count Symbols

data = input()
message = [ele for ele in data]
unique = set(message)

for ele in sorted(unique):
    print(f"{ele}: {message.count(ele)} time/s")




                # 05. Phonebook

phonebook = {}
test = "Adam-0888080808"
while True:
    data = input()
    if data[0].isalpha():
        name, number = data.split("-")
        phonebook[name] = number
    elif data.isnumeric():
        data = int(data)
        for i in range(data):
            name = input()
            if name in phonebook.keys():
                print(f"{name} -> {phonebook[name]}")
            else:
                print(f"Contact {name} does not exist.")
        break




                # 06. Longest Intersection

n = int(input())
sections = []


for i in range(n):
    left, right = input().split("-")
    left = [int(ele) for ele in left.split(',')]
    left_range = set([ele for ele in range(left[0],left[1]+1)])
    right = [int(ele) for ele in right.split(',')]
    right_range = set([ele for ele in range(right[0],right[1]+1)])
    sections.append(set.intersection(left_range,right_range))

sections = [list(ele) for ele in sections]
max_el = max(sections, key = len)
max_length = max(len(ele) for ele in sections)

print(f"Longest intersection is {max_el} with length {max_length}")




                # 07. Battle of Names

n = int(input())
odd = []
even = []

for i in range(1,n+1):
    data = input()
    total = 0
    for ele in data:
        total += ord(ele)
    number = total // i
    if number % 2 == 0:
        even.append(number)
    else:
        odd.append(number)


even_number = sum(even)
odd_number = sum(odd)
odd = set(odd)
even = set(even)
symmetric = even.symmetric_difference(odd)
union = even.union(odd)
difference = even.difference(odd)

if even_number > odd_number:
    z = even.symmetric_difference(odd)
elif odd_number > even_number:
    z = odd.difference(even)
else:
    z = odd.intersection(even)

temp = [str(ele) for ele in z]
print(", ".join(temp))
